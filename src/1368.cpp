#include "common.h"

class Solution {
  public:
    int minCost(vector<vector<int>> &grid) {
        vector<vector<int>> directions{{0, 1}, {0, -1}, {1, 0}, {-1, 0}};
        int n = grid.size();
        int m = grid[0].size();
        vector<vector<int>> dp(n, vector<int>(m, INT_MAX));
        dp[0][0] = 0;
        deque<vector<int>> queue{{0, 0}};
        while (queue.size()) {
            auto cell = queue.front();
            queue.pop_front();
            int i = cell[0], j = cell[1];
            int v = grid[i][j];
            for (int dir = 0; dir < directions.size(); dir++) {
                int i2 = i + directions[dir][0], j2 = j + directions[dir][1];
                if (i2 < 0 || i2 >= n || j2 < 0 || j2 >= m) {
                    continue;
                }
                int cost = v == dir + 1 ? 0 : 1;
                if (dp[i][j] + cost < dp[i2][j2]) {
                    dp[i2][j2] = dp[i][j] + cost;
                    if (cost == 0) {
                        queue.push_front({i2, j2});
                    } else {
                        queue.push_back({i2, j2});
                    }
                }
            }
        }

        return dp[n - 1][m - 1];
    }
};

int main() {
    TestSuite<int, vector<vector<int>>> testSuite("Minimum cost", "grid");
    testSuite.addTestCases({
        // Original test cases
        {
            3,
            {{1, 1, 1, 1}, {2, 2, 2, 2}, {1, 1, 1, 1}, {2, 2, 2, 2}},
        },
        {
            0,
            {{1, 1, 3}, {3, 2, 2}, {1, 1, 4}},
        },
        {
            1,
            {{1, 2}, {4, 3}},
        },
        // Submission test cases
        {
            18,
            {{3, 4, 3}, {2, 2, 2}, {2, 1, 1}, {4, 3, 2}, {2, 1, 4}, {2, 4, 1}, {3, 3, 3}, {1, 4, 2}, {2, 2, 1}, {2, 1, 1}, //
             {3, 3, 1}, {4, 1, 4}, {2, 1, 4}, {3, 2, 2}, {3, 3, 1}, {4, 4, 1}, {1, 2, 2}, {1, 1, 1}, {1, 3, 4}, {1, 2, 1}, //
             {2, 2, 4}, {2, 1, 3}, {1, 2, 1}, {4, 3, 2}, {3, 3, 4}, {2, 2, 1}, {3, 4, 3}, {4, 2, 3}, {4, 4, 4}},
        },
        {
            5,
            {{2, 3, 2, 2, 3, 4, 4, 4}, {1, 1, 2, 3, 1, 4, 4, 3}},
        },
        {
            44,
            {{2, 3, 2, 4, 4, 1, 3, 2, 1, 4, 2, 3, 1, 2, 2, 1},  //
             {3, 1, 1, 2, 1, 2, 1, 1, 3, 2, 1, 1, 2, 2, 4, 4},  //
             {3, 1, 2, 4, 4, 2, 4, 3, 4, 4, 4, 4, 4, 4, 2, 4},  //
             {4, 1, 4, 1, 1, 2, 2, 4, 1, 2, 4, 4, 2, 2, 2, 3},  //
             {1, 2, 1, 2, 2, 3, 3, 1, 3, 3, 2, 1, 3, 1, 1, 1},  //
             {3, 2, 2, 4, 3, 1, 1, 3, 4, 3, 1, 2, 4, 3, 2, 3},  //
             {1, 2, 2, 1, 4, 3, 4, 4, 1, 4, 1, 1, 3, 4, 3, 1},  //
             {3, 2, 4, 2, 1, 1, 1, 3, 3, 4, 2, 4, 3, 4, 2, 2},  //
             {1, 1, 4, 3, 2, 1, 4, 2, 3, 2, 3, 2, 1, 4, 2, 2},  //
             {1, 1, 1, 1, 1, 2, 4, 2, 2, 3, 2, 4, 2, 1, 2, 2},  //
             {4, 2, 1, 2, 2, 3, 2, 4, 2, 1, 4, 4, 1, 1, 2, 1},  //
             {2, 4, 3, 1, 1, 3, 3, 3, 2, 3, 1, 1, 2, 2, 4, 3},  //
             {2, 3, 2, 3, 1, 3, 4, 3, 1, 3, 1, 3, 3, 1, 2, 4},  //
             {3, 2, 2, 4, 1, 1, 4, 3, 1, 1, 1, 2, 4, 1, 4, 2},  //
             {4, 1, 1, 1, 2, 4, 1, 2, 2, 4, 2, 3, 1, 1, 2, 1},  //
             {4, 2, 1, 1, 2, 2, 4, 4, 1, 3, 2, 2, 3, 4, 1, 1},  //
             {3, 3, 1, 2, 3, 2, 3, 4, 1, 2, 4, 2, 4, 4, 4, 4},  //
             {4, 3, 2, 1, 2, 1, 2, 2, 4, 4, 3, 3, 1, 3, 1, 3},  //
             {3, 2, 3, 4, 1, 1, 3, 1, 2, 3, 2, 2, 3, 3, 4, 1},  //
             {1, 4, 2, 2, 1, 1, 1, 3, 2, 3, 1, 4, 2, 4, 2, 2},  //
             {1, 3, 2, 2, 4, 3, 3, 3, 1, 4, 2, 3, 4, 2, 3, 2},  //
             {4, 4, 4, 1, 4, 4, 1, 2, 3, 2, 3, 4, 3, 4, 3, 4},  //
             {1, 2, 1, 3, 3, 1, 3, 4, 4, 4, 2, 1, 3, 3, 4, 4},  //
             {2, 2, 3, 3, 1, 4, 1, 2, 4, 3, 3, 4, 4, 1, 4, 1},  //
             {4, 2, 1, 2, 3, 4, 2, 4, 3, 3, 3, 1, 3, 3, 1, 4},  //
             {1, 2, 2, 2, 4, 3, 2, 1, 2, 4, 2, 1, 1, 2, 1, 3},  //
             {3, 1, 4, 1, 1, 4, 3, 4, 4, 4, 3, 3, 4, 2, 3, 4},  //
             {3, 2, 3, 3, 1, 2, 4, 4, 3, 2, 1, 3, 4, 3, 2, 4},  //
             {4, 1, 3, 3, 1, 4, 3, 4, 3, 2, 3, 3, 3, 1, 3, 2},  //
             {3, 2, 3, 2, 1, 4, 2, 4, 1, 3, 4, 2, 3, 2, 2, 3},  //
             {1, 3, 2, 4, 1, 1, 3, 3, 1, 3, 2, 4, 4, 1, 4, 1},  //
             {4, 3, 3, 2, 1, 2, 1, 2, 4, 4, 2, 4, 3, 3, 4, 4},  //
             {3, 1, 3, 3, 4, 2, 3, 4, 3, 3, 3, 1, 2, 3, 2, 1},  //
             {2, 1, 4, 1, 1, 1, 3, 3, 1, 1, 2, 3, 4, 4, 1, 2},  //
             {2, 4, 1, 1, 2, 1, 2, 4, 1, 3, 4, 2, 2, 2, 3, 2},  //
             {1, 4, 1, 3, 3, 4, 1, 1, 1, 4, 1, 2, 1, 3, 4, 4},  //
             {3, 1, 1, 3, 3, 3, 4, 1, 4, 4, 2, 2, 3, 2, 1, 3},  //
             {2, 4, 3, 1, 3, 2, 1, 2, 4, 2, 4, 1, 4, 1, 4, 4},  //
             {2, 4, 4, 1, 4, 4, 1, 1, 1, 3, 3, 2, 2, 3, 4, 1},  //
             {4, 3, 1, 2, 3, 3, 4, 4, 4, 3, 1, 2, 3, 4, 2, 3},  //
             {2, 3, 2, 2, 1, 3, 3, 3, 2, 1, 2, 1, 4, 4, 4, 2},  //
             {3, 4, 4, 3, 1, 1, 1, 1, 1, 2, 2, 1, 3, 2, 4, 1},  //
             {4, 1, 1, 1, 2, 2, 2, 3, 2, 1, 2, 2, 3, 1, 4, 2},  //
             {2, 3, 1, 1, 2, 1, 2, 4, 4, 4, 3, 1, 1, 2, 1, 2},  //
             {3, 3, 2, 1, 1, 2, 3, 4, 3, 1, 3, 3, 4, 4, 2, 1},  //
             {3, 2, 3, 1, 4, 1, 1, 4, 4, 4, 4, 2, 4, 1, 2, 1},  //
             {1, 1, 2, 4, 1, 1, 3, 2, 4, 2, 2, 2, 4, 4, 4, 1},  //
             {1, 2, 4, 3, 2, 1, 4, 4, 4, 1, 4, 4, 3, 4, 3, 3},  //
             {4, 2, 3, 1, 3, 3, 4, 4, 4, 1, 2, 3, 4, 1, 2, 4},  //
             {1, 3, 1, 1, 4, 2, 3, 2, 2, 2, 3, 3, 4, 3, 4, 3},  //
             {4, 3, 4, 1, 2, 2, 2, 3, 4, 2, 4, 4, 2, 3, 1, 1},  //
             {2, 2, 2, 1, 2, 1, 2, 3, 1, 1, 4, 1, 3, 4, 1, 1},  //
             {1, 1, 4, 2, 1, 1, 1, 4, 4, 1, 2, 4, 3, 1, 1, 1},  //
             {3, 2, 3, 2, 1, 2, 3, 2, 2, 2, 4, 3, 4, 4, 3, 2},  //
             {3, 4, 2, 2, 1, 1, 4, 3, 3, 3, 2, 4, 3, 2, 3, 4},  //
             {2, 2, 1, 2, 3, 4, 3, 4, 1, 4, 4, 4, 3, 2, 3, 2},  //
             {1, 3, 1, 1, 4, 1, 4, 4, 3, 3, 1, 2, 3, 1, 2, 3},  //
             {2, 1, 2, 2, 4, 1, 1, 2, 1, 3, 1, 3, 4, 4, 3, 1},  //
             {1, 3, 3, 1, 4, 3, 4, 3, 3, 3, 2, 4, 4, 3, 4, 1},  //
             {3, 2, 1, 3, 2, 3, 2, 4, 3, 2, 1, 4, 4, 3, 3, 2},  //
             {1, 1, 4, 4, 4, 3, 1, 3, 2, 2, 3, 3, 3, 4, 3, 1},  //
             {4, 2, 2, 1, 4, 1, 2, 2, 4, 2, 3, 3, 2, 4, 2, 4},  //
             {3, 2, 2, 3, 1, 3, 1, 2, 2, 2, 1, 1, 2, 4, 3, 1},  //
             {1, 3, 3, 2, 4, 1, 4, 2, 4, 1, 1, 1, 3, 2, 2, 1},  //
             {3, 3, 3, 3, 1, 4, 3, 1, 3, 1, 3, 2, 2, 3, 3, 4},  //
             {2, 2, 4, 1, 3, 2, 1, 1, 2, 4, 2, 1, 1, 2, 3, 1},  //
             {4, 1, 1, 3, 3, 4, 2, 1, 2, 1, 3, 3, 4, 1, 1, 2},  //
             {2, 4, 4, 1, 3, 3, 1, 3, 3, 3, 4, 2, 4, 4, 4, 2},  //
             {3, 3, 1, 1, 4, 2, 1, 1, 4, 1, 2, 1, 1, 2, 3, 1},  //
             {1, 2, 4, 4, 2, 3, 4, 4, 4, 3, 3, 1, 4, 1, 3, 4},  //
             {3, 3, 3, 2, 2, 2, 3, 3, 3, 3, 2, 1, 1, 3, 1, 1},  //
             {3, 3, 3, 2, 4, 4, 2, 2, 4, 2, 1, 2, 3, 2, 2, 1},  //
             {2, 1, 2, 2, 1, 2, 4, 4, 2, 1, 2, 3, 4, 2, 2, 1},  //
             {4, 4, 4, 2, 1, 2, 2, 3, 2, 1, 2, 3, 1, 2, 4, 3},  //
             {4, 4, 1, 3, 3, 4, 2, 2, 2, 3, 2, 4, 2, 1, 3, 2},  //
             {4, 3, 1, 3, 1, 2, 3, 1, 3, 1, 4, 4, 1, 4, 4, 1},  //
             {1, 3, 3, 1, 3, 2, 2, 4, 3, 4, 2, 1, 2, 4, 1, 3},  //
             {1, 2, 3, 4, 3, 2, 3, 4, 3, 2, 1, 2, 3, 3, 2, 3},  //
             {4, 4, 2, 3, 3, 3, 2, 3, 4, 1, 3, 2, 3, 4, 3, 3},  //
             {3, 3, 4, 1, 1, 2, 1, 4, 2, 1, 3, 1, 2, 1, 2, 3},  //
             {1, 1, 2, 2, 2, 2, 3, 2, 4, 4, 2, 1, 4, 3, 2, 3},  //
             {2, 4, 1, 3, 4, 2, 3, 1, 2, 3, 4, 4, 4, 3, 2, 4},  //
             {4, 4, 1, 3, 1, 2, 1, 4, 3, 3, 1, 2, 1, 3, 2, 2},  //
             {3, 1, 4, 3, 1, 3, 1, 3, 3, 1, 1, 3, 2, 1, 3, 2},  //
             {4, 1, 4, 4, 2, 2, 1, 2, 4, 4, 2, 2, 1, 2, 2, 2},  //
             {4, 2, 1, 1, 2, 3, 4, 1, 4, 4, 3, 1, 1, 1, 4, 4},  //
             {4, 3, 4, 1, 2, 3, 4, 3, 2, 3, 3, 2, 1, 1, 2, 4},  //
             {2, 1, 3, 1, 3, 1, 3, 1, 1, 3, 3, 3, 3, 3, 1, 1},  //
             {2, 1, 3, 1, 1, 2, 1, 3, 2, 3, 4, 3, 3, 3, 3, 1},  //
             {1, 2, 2, 2, 2, 2, 3, 2, 1, 2, 4, 4, 2, 4, 3, 3},  //
             {1, 1, 1, 4, 2, 4, 2, 3, 3, 2, 3, 1, 1, 4, 2, 1},  //
             {2, 3, 1, 4, 3, 3, 1, 3, 1, 1, 1, 2, 4, 2, 3, 2},  //
             {4, 1, 4, 2, 4, 1, 3, 4, 2, 1, 2, 2, 2, 4, 3, 2},  //
             {3, 1, 4, 2, 1, 3, 2, 1, 3, 4, 4, 2, 3, 1, 2, 4},  //
             {4, 4, 3, 2, 1, 1, 3, 2, 2, 4, 2, 4, 1, 4, 2, 2},  //
             {2, 3, 2, 3, 1, 3, 4, 1, 1, 1, 3, 3, 3, 3, 2, 4},  //
             {3, 3, 3, 1, 2, 4, 1, 4, 1, 1, 3, 1, 3, 2, 1, 1},  //
             {3, 2, 4, 1, 1, 1, 1, 2, 1, 3, 4, 3, 3, 2, 1, 1},  //
             {4, 1, 1, 4, 1, 4, 3, 4, 3, 4, 2, 3, 1, 3, 2, 2}}, //
        },
        // My test cases
    });

    Main main;
    return main.runTests(&Solution::minCost, testSuite);
}
